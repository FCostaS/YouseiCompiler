Memory[ 0] = 32'B00001000000000010000000000110010; // addi	$ra $zero 50
Memory[ 1] = 32'B00001000000111110000000001001011; // addi	$sp $zero 75
Memory[ 2] = 32'B00010100000000000000000000100111; // jump	  main
Memory[ 3] = 32'B00110000000000000000000000000000; // nop	max
Memory[ 4] = 32'B00011100000000100000000000000000; // sw	$a0 0($zero)
Memory[ 5] = 32'B00011100000000110000000000000001; // sw	$a1 1($zero)
Memory[ 6] = 32'B00011000000101000000000000000000; // lw	$s0 0($zero)
Memory[ 7] = 32'B00011000000101010000000000000001; // lw	$s1 1($zero)
Memory[ 8] = 32'B00111110100101010100000000000000; // sbt	$t0 $s0 $s1
Memory[ 9] = 32'B00101001000000000000000000001110; // beq	$t0 0 L0
Memory[10] = 32'B00011000000101010000000000000000; // lw	$s1 0($zero)
Memory[11] = 32'B00001110101000100000000000000000; // move	$a0 $s1 
Memory[12] = 32'B00100100010000000000000000000000; // out	$a0  
Memory[13] = 32'B00010100000000000000000000010010; // jump	  L1
Memory[14] = 32'B00110000000000000000000000000000; // nop	L0
Memory[15] = 32'B00011000000101010000000000000001; // lw	$s1 1($zero)
Memory[16] = 32'B00001110101000100000000000000000; // move	$a0 $s1 
Memory[17] = 32'B00100100010000000000000000000000; // out	$a0  
Memory[18] = 32'B00110000000000000000000000000000; // nop	L1
Memory[19] = 32'B00111000001101000000000000000000; // pop	$ra $s0 
Memory[20] = 32'B01001110100000000000000000000000; // jr	$s0  
Memory[21] = 32'B00110000000000000000000000000000; // nop	max2
Memory[22] = 32'B00011100000000100000000000000011; // sw	$a0 3($zero)
Memory[23] = 32'B00011100000000110000000000000100; // sw	$a1 4($zero)
Memory[24] = 32'B00011000000101000000000000000011; // lw	$s0 3($zero)
Memory[25] = 32'B00011000000101010000000000000100; // lw	$s1 4($zero)
Memory[26] = 32'B00111110100101010100000000000000; // sbt	$t0 $s0 $s1
Memory[27] = 32'B00101001000000000000000000100000; // beq	$t0 0 L2
Memory[28] = 32'B00011000000101010000000000000011; // lw	$s1 3($zero)
Memory[29] = 32'B00001110101000100000000000000000; // move	$a0 $s1 
Memory[30] = 32'B00100100010000000000000000000000; // out	$a0  
Memory[31] = 32'B00010100000000000000000000100100; // jump	  L3
Memory[32] = 32'B00110000000000000000000000000000; // nop	L2
Memory[33] = 32'B00011000000101010000000000000100; // lw	$s1 4($zero)
Memory[34] = 32'B00001110101000100000000000000000; // move	$a0 $s1 
Memory[35] = 32'B00100100010000000000000000000000; // out	$a0  
Memory[36] = 32'B00110000000000000000000000000000; // nop	L3
Memory[37] = 32'B00111000001101000000000000000000; // pop	$ra $s0 
Memory[38] = 32'B01001110100000000000000000000000; // jr	$s0  
Memory[39] = 32'B00110000000000000000000000000000; // nop	main
Memory[40] = 32'B00001000000001110000000000000010; // addi	$t0 $zero 2
Memory[41] = 32'B00001100111000100000000000000000; // move	$a0 $t0 
Memory[42] = 32'B00001000000010000000000000000011; // addi	$t1 $zero 3
Memory[43] = 32'B00001101000000110000000000000000; // move	$a1 $t1 
Memory[44] = 32'B00001000000101000000000000101111; // addi	$s0 $zero 47
Memory[45] = 32'B00110100001101000000000000000000; // push	$ra $s0 
Memory[46] = 32'B00010100000000000000000000000011; // jump	  max
Memory[47] = 32'B00001000000010010000000000000001; // addi	$t2 $zero 1
Memory[48] = 32'B00001101001000100000000000000000; // move	$a0 $t2 
Memory[49] = 32'B00100100010000000000000000000000; // out	$a0  
Memory[50] = 32'B00001000000010100000000000001111; // addi	$t3 $zero 15
Memory[51] = 32'B00001101010000100000000000000000; // move	$a0 $t3 
Memory[52] = 32'B00001000000010110000000000001101; // addi	$t4 $zero 13
Memory[53] = 32'B00001101011000110000000000000000; // move	$a1 $t4 
Memory[54] = 32'B00001000000101000000000000111001; // addi	$s0 $zero 57
Memory[55] = 32'B00110100001101000000000000000000; // push	$ra $s0 
Memory[56] = 32'B00010100000000000000000000010101; // jump	  max2
Memory[57] = 32'B00001000000011000000000000000010; // addi	$t5 $zero 2
Memory[58] = 32'B00001101100000100000000000000000; // move	$a0 $t5 
Memory[59] = 32'B00100100010000000000000000000000; // out	$a0  
Memory[60] = 32'B00010100000000000000000000111100; // halt	  

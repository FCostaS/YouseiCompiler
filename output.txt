Function: 'Global' Type: 'Global' Parameters: '0' Line: '0'
Variable Name  Type Variable  Location   Line Numbers
-------------  -------------  --------   ------------

Function: 'main' Type: 'Void' Parameters: '0' Line: '4'
Variable Name  Type Variable  Location   Line Numbers
-------------  -------------  --------   ------------
i              Integer        0            6    8   10   12   12   13 
output         Function Void  1           13 

[01;33m[Intermediary Code]
[0m0: (nop,main,_,_)
1: (li,$t0,0,_)
2: (sw,$t0,i,0)
3: (nop,L0,_,_)
4: (li,$t0,10,_)
5: (slt,$t1,i,$t0)
6: (beq,$t1,0,L1)
7: (li,$t1,1,_)
8: (add,$t2,i,$t1)
9: (sw,$t2,i,0)
10: (move,$a0,i,0)
11: (out,$a0,_,_)
12: (jump,L0,_,_)
13: (nop,L1,_,_)
14: (halt,_,_,_)
[01;33m
[Binary and Assembly Generator]
[0m
Memory[ 0] = 32'B001100_00000000000000000000000000; // nop main
Memory[ 1] = 32'B000010_00000001110000000000000000; // addi	$t0 $zero 0
Memory[ 2] = 32'B000111_00000001110000000000000000; // sw	$t0 0($zero)
Memory[ 3] = 32'B001100_00000000000000000000000000; // nop L0
Memory[ 4] = 32'B000010_00000001110000000000001010; // addi	$t0 $zero 10
Memory[ 5] = 32'B000110_00000101000000000000000000; // lw	$s0 0($zero)
Memory[ 6] = 32'B000100_10100001110100100000000000; // slt	$t1 $s0 $t0
Memory[ 7] = 32'B001010_0100100000; // beq	$t1 0 L1
Memory[ 8] = 32'B000010_00000010000000000000000001; // addi	$t1 $zero 1
Memory[ 9] = 32'B000110_00000101000000000000000000; // lw	$s0 0($zero)
Memory[10] = 32'B000000_01000101000101000000000000; // add	$t2 $s0 $t1
Memory[11] = 32'B000111_00000010100000000000000000; // sw	$t2 0($zero)
Memory[12] = 32'B000110_00000101010000000000000000; // lw	$s1 0($zero)
Memory[13] = 32'B000011_10101000010000000000000000; // move	$a0 $s1 
Memory[14] = 32'B001001_00001000000000000000000000; // out	$a0  
Memory[15] = 32'B000101_00000000000000000000000011; // jump	L0  
Memory[16] = 32'B001100_00000000000000000000000000; // nop L1
Memory[17] = 32'B000101_00000000000000000000010001; // halt	  
Function: 'Global' Type: 'Global' Parameters: '0' Line: '0'
Variable Name  Type Variable  Location   Line Numbers
-------------  -------------  --------   ------------

Function: 'main' Type: 'Void' Parameters: '0' Line: '4'
Variable Name  Type Variable  Location   Line Numbers
-------------  -------------  --------   ------------
i              Integer        0            6    8   10   12   12   13 
output         Function Void  1           13 

[01;33m[Intermediary Code]
[0m0: (nop,main,_,_)
1: (li,$t0,0,_)
2: (sw,$t0,i,0)
3: (nop,L0,_,_)
4: (li,$t0,10,_)
5: (slt,$t1,i,$t0)
6: (beq,$t1,0,L1)
7: (li,$t1,1,_)
8: (add,$t2,i,$t1)
9: (sw,$t2,i,0)
10: (move,$a0,i,0)
11: (out,$a0,_,_)
12: (jump,L0,_,_)
13: (nop,L1,_,_)
14: (halt,_,_,_)
001100_00000000000000000000000000
000010_00000001110000000000000000
000111_00000001110000000000000000
001100_00000000000000000000000000
000010_00000001110000000000001010
000110_00000101000000000000000000
000100_10100001110100100000000000
000010_00000010000000000000000001
000110_00000101000000000000000000
000000_01000101000101000000000000
000111_00000010100000000000000000
000110_00000101010000000000000000
000011_10101000010000000000000000
001001_00001000000000000000000000
000101_00000000000000000000000011
001100_00000000000000000000000000
000101_00000000000000000000010001
[01;33m
[Binary and Assembly Generator]
[0m
Memory[ 0] = 32'B001100_00000000000000000000000000; // nop main
Memory[ 1] = 32'B000010_00000001110000000000000000; // addi	$t0 $zero 0
Memory[ 2] = 32'B000111_00000001110000000000000000; // sw	$t0 0($zero)
Memory[ 3] = 32'B001100_00000000000000000000000000; // nop L0
Memory[ 4] = 32'B000010_00000001110000000000001010; // addi	$t0 $zero 10
Memory[ 5] = 32'B000110_00000101000000000000000000; // lw	$s0 0($zero)
Memory[ 6] = 32'B000100_10100001110100100000000000; // slt	$t1 $s0 $t0
Memory[ 7] = 32'B001010_01001000000000000000010000; // beq	$t1 0 L1
Memory[ 8] = 32'B000010_00000010000000000000000001; // addi	$t1 $zero 1
Memory[ 9] = 32'B000110_00000101000000000000000000; // lw	$s0 0($zero)
Memory[10] = 32'B000000_01000101000101000000000000; // add	$t2 $s0 $t1
Memory[11] = 32'B000111_00000010100000000000000000; // sw	$t2 0($zero)
Memory[12] = 32'B000110_00000101010000000000000000; // lw	$s1 0($zero)
Memory[13] = 32'B000011_10101000010000000000000000; // move	$a0 $s1 
Memory[14] = 32'B001001_00001000000000000000000000; // out	$a0  
Memory[15] = 32'B000101_00000000000000000000000011; // jump	L0  
Memory[16] = 32'B001100_00000000000000000000000000; // nop L1
Memory[17] = 32'B000101_00000000000000000000010001; // halt	  
